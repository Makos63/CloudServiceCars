version: '3.7'

services:
  node1:
    image: 'docker.io/bitnami/mariadb-galera:10.2'
    ports:
      - '3306:3306'
      - '4444:4444'
      - '4567:4567'
      - '4568:4568'
    volumes:
      - 'node1d:/bitnami/mariadb'
      - 'mariaconf:/docker-entrypoint-initdb.d'
    restart: unless-stopped
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=root
      - REPLICATION_PASSWORD=test
      - TZ=Europe/Berlin
      - MYSQL_DATABASE=vsTest
      - MYSQL_USER=public
      - MYSQL_PASSWORD=public
      - MARIADB_GALERA_CLUSTER_BOOTSTRAP=yes
      - MARIADB_REPLICATION_USER=test
      - MARIADB_REPLICATION_PASSWORD=test
      - MARIADB_GALERA_CLUSTER_NAME=myCluster
      - MARIADB_GALERA_MARIABACKUP_USER=backupTest
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backupTest
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://172.20.0.10,172.20.0.11,172.20.0.12
      - MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=yes
    networks:
      myNetwork:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mariadb-galera/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 2


  node2:
    image: 'docker.io/bitnami/mariadb-galera:10.2'
    volumes:
      - 'node2d:/bitnami/mariadb'
      - 'mariaconf:/docker-entrypoint-initdb.d'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=root
      - REPLICATION_PASSWORD=test
      - TZ=Europe/Berlin
      - MYSQL_DATABASE=vsTest
      - MYSQL_USER=public
      - MYSQL_PASSWORD=public
      - MARIADB_REPLICATION_USER=test
      - MARIADB_REPLICATION_PASSWORD=test
      - MARIADB_GALERA_CLUSTER_NAME=myCluster
      - MARIADB_GALERA_MARIABACKUP_USER=backupTest
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backupTest
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://172.20.0.10,172.20.0.11,172.20.0.12
      - MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=yes
    networks:
      myNetwork:
        ipv4_address: 172.20.0.11
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/mariadb-galera/healthcheck.sh' ]
      interval: 15s
      timeout: 5s
      retries: 2

  node3:
    image: 'docker.io/bitnami/mariadb-galera:10.2'
    volumes:
      - 'node3d:/bitnami/mariadb'
      - 'mariaconf:/docker-entrypoint-initdb.d'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=root
      - REPLICATION_PASSWORD=test
      - TZ=Europe/Berlin
      - MYSQL_DATABASE=vsTest
      - MYSQL_USER=public
      - MYSQL_PASSWORD=public

      - MARIADB_REPLICATION_USER=test
      - MARIADB_REPLICATION_PASSWORD=test
      - MARIADB_GALERA_CLUSTER_NAME=myCluster
      - MARIADB_GALERA_MARIABACKUP_USER=backupTest
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backupTest
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://172.20.0.10,172.20.0.11,172.20.0.12
      - MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=yes
    networks:
      myNetwork:
        ipv4_address: 172.20.0.12
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/mariadb-galera/healthcheck.sh' ]
      interval: 15s
      timeout: 5s
      retries: 2

  provider:
    build:
      context: Provider
      dockerfile: dockerProvider
    environment:
      rpcPort: 45000
      rpcIp: 172.20.0.30
    restart: unless-stopped
    networks:
      myNetwork:
        ipv4_address: 172.20.0.30
    depends_on:
      - node1

  provider2:
    build:
      context: Provider
      dockerfile: dockerProvider
    environment:
      rpcPort: 45000
      rpcIp: 172.20.0.31
    restart: unless-stopped

    networks:
      myNetwork:
        ipv4_address: 172.20.0.31
    depends_on:
      - node1

  provider3:
    build:
      context: Provider
      dockerfile: dockerProvider
    environment:
      rpcPort: 45000
      rpcIp: 172.20.0.32
    restart: unless-stopped
    networks:
      myNetwork:
        ipv4_address: 172.20.0.32
    depends_on:
      - node1

  central:
    build:
      context: Central
      dockerfile: dockerCentral
    environment:
      rpcDesPort: 45000
      rpcDesIp: 172.20.0.30
      brokerIP: 172.20.0.110
      id: 1
    restart: unless-stopped
    ports:
      - 80:8080/tcp
    networks:
      myNetwork:
        ipv4_address: 172.20.0.60
    depends_on:
    - provider

  mosquitto:
    image: eclipse-mosquitto
    ports:
      - "1883:1883"
    volumes:
      - ./MqttBroker/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      myNetwork:
        ipv4_address: 172.20.0.110


  avgspeed_sensor:
    build:
      context: Sensor
      dockerfile: dockerSensor
    environment:
      sensorMode: avgSpeedSensor
      sensorDesIP: 172.20.0.60
      sensorDesPort: 50000
      brookerIP: 172.20.0.110
      id: 1
    networks:
      myNetwork:
        ipv4_address: 172.20.1.10
    depends_on:
    - central

  fuel_sensor:
    build:
      context: Sensor
      dockerfile: dockerSensor
    environment:
      sensorMode: fuelSensor
      sensorDesIP: 172.20.0.60
      sensorDesPort: 50000
      brookerIP: 172.20.0.110
      id: 1
    networks:
      myNetwork:
        ipv4_address: 172.20.1.11
    depends_on:
    - central

  mileage_sensor:
    build:
      context: Sensor
      dockerfile: dockerSensor
    environment:
      sensorMode: mileageSensor
      sensorDesIP: 172.20.0.60
      sensorDesPort: 50000
      brookerIP: 172.20.0.110
      id: 1
    networks:
      myNetwork:
        ipv4_address: 172.20.1.12
    depends_on:
    - central

  traffic_sensor:
    build:
      context: Sensor
      dockerfile: dockerSensor
    environment:
      sensorMode: trafficSensor
      sensorDesIP: 172.20.0.60
      sensorDesPort: 50000
      brookerIP: 172.20.0.110
      id: 1
    networks:
      myNetwork:
        ipv4_address: 172.20.1.13
    depends_on:
    - central












  central2:
    build:
      context: Central
      dockerfile: dockerCentral
    environment:
      rpcDesPort: 45000
      rpcDesIp: 172.20.0.30
      brokerIP: 172.20.0.111
      id: 2
    restart: unless-stopped
    ports:
      - 81:8080/tcp
    networks:
      myNetwork:
        ipv4_address: 172.20.1.81
    depends_on:
      - provider

  mosquitto2:
    image: eclipse-mosquitto
    ports:
      - "1884:1883"
    volumes:
      - ./MqttBroker/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      myNetwork:
        ipv4_address: 172.20.0.111


  avgspeed_sensor2:
    build:
      context: Sensor
      dockerfile: dockerSensor
    environment:
      sensorMode: avgSpeedSensor
      sensorDesIP: 172.20.0.61
      sensorDesPort: 50000
      brookerIP: 172.20.0.111
      id: 2
    networks:
      myNetwork:
        ipv4_address: 172.20.1.14
    depends_on:
      - central2

  fuel_sensor2:
    build:
      context: Sensor
      dockerfile: dockerSensor
    environment:
      sensorMode: fuelSensor
      sensorDesIP: 172.20.0.61
      sensorDesPort: 50000
      brookerIP: 172.20.0.111
      id: 2
    networks:
      myNetwork:
        ipv4_address: 172.20.1.15
    depends_on:
      - central2

  mileage_sensor2:
    build:
      context: Sensor
      dockerfile: dockerSensor
    environment:
      sensorMode: mileageSensor
      sensorDesIP: 172.20.0.61
      sensorDesPort: 50000
      brookerIP: 172.20.0.111
      id: 2
    networks:
      myNetwork:
        ipv4_address: 172.20.1.16
    depends_on:
      - central2

  traffic_sensor2:
    build:
      context: Sensor
      dockerfile: dockerSensor
    environment:
      sensorMode: trafficSensor
      sensorDesIP: 172.20.0.61
      sensorDesPort: 50000
      brookerIP: 172.20.0.111
      id: 2
    networks:
      myNetwork:
        ipv4_address: 172.20.1.17
    depends_on:
      - central2













volumes:
  node1d:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './Mariadb/node1d'
  node2d:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './Mariadb/node2d'
  node3d:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './Mariadb/node3d'
  mariaconf:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './Mariadb/node1d/mariadb.setup'

networks:
  myNetwork:
    external: true
